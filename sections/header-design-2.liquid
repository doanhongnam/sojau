
{%  liquid 
  assign containerConfig = section.settings.container_config
  assign show_account = section.settings.show_account
%}

{%- style -%}
    {% if section.settings.menu_bg %}
      .header-wrapper{
      background: {{ section.settings.menu_bg }};
      }
    {% endif %}
  {%- endstyle -%}
  
  <div class="header-ds2">
    {% if section.settings.enable_sticky_header %}
      <sticky-header class="header-sticky">
    {% endif %}
        <div class="overscroll-none header-wrapper {% if section.settings.show_line_separator %}header-wrapper--border-bottom{% endif %}">
          <header class="header header-desktop header-full">
            <div class="{{ containerConfig }}">
              <div class="header-ds2__top flex items-center justify-between">
                <div class="header-ds2__top-left flex items-center uppercase">
                 {% for block in section.blocks %}
                  {% assign menu = block.settings.menu %}
                    {% case block.type %}
                      {% when 'menu_item' %}
                        {% if menu != blank %}
                          <div class="menu-title {% if  forloop.first %}active{% endif %} flex  cursor-pointer px-2.5 h-[100px]" data-hover-index="{{ forloop.index }}">
                            {{ block.settings.heading }}
                          </div>  
                      {% endif %}  
                    {% endcase %}
                 {% endfor %}
                </div>
                <div class="header-ds2__top-center">
                  {% render 'header-logo' %}
                </div>
                <div class="header-ds2__top-right header-wrap-ic flex items-center justify-end">
                  <div class="search-modal modal__content gradient" role="dialog" aria-modal="true" aria-label="{{ 'general.search.search' | t }}">
                    <div class="search-modal__content{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} search-modal__content-top{% else %} search-modal__content-bottom{% endif %}" tabindex="-1">
                      {%- if settings.predictive_search_enabled -%}
                      <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
                      {%- endif -%}
                        <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
                          <div class="field">
                              <input name="type" type="hidden" value="product">
                              <input class="search__input field__input" id="Search-In-Modal" type="search" name="q" value="" placeholder="{{ 'general.search.search' | t }}" {%- if settings.predictive_search_enabled -%} role="combobox" aria-expanded="false" aria-owns="predictive-search-results-list" aria-controls="predictive-search-results-list" aria-haspopup="listbox" aria-autocomplete="list" autocorrect="off" autocomplete="off" autocapitalize="off" spellcheck="false" {%- endif -%}>
                              <input name="options[prefix]" type="hidden" value="last">           
                          </div>
                            {%- if settings.predictive_search_enabled -%}
                              <div class="predictive-search predictive-search--header" data-predictive-search tabindex="-1">
                                <div class="predictive-search__loading-state">
                                  <svg aria-hidden="true" class="spinner" focusable="false" role="presentation" viewbox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                                      <circle class="path" cx="33" cy="33" fill="none" r="30" stroke-width="6"></circle>
                                  </svg>
                                </div>
                              </div>
                              <span aria-hidden="true" class="predictive-search-status visually-hidden" role="status"></span>
                            {%- endif -%}
                        </form>
                      {%- if settings.predictive_search_enabled -%}
                      </predictive-search>
                      {%- endif -%}
                    </div>
                  </div>
                  {% render 'header-icon' %}
                  {% if show_account %}
                    {% render 'header-account' %}
                  {% endif %}
                </div>  
              </div>
            </div>
            <nav class="header-ds2__bottom">
              <div class="{{ containerConfig }}">
                <div class="header-ds2__bottom-wrap">
                  {% for block in section.blocks %}
                    {% case block.type %}
                      {% when 'menu_item' %}
                        {% render 'header-menu-design-2', block: block, first: forloop.first, data_index: forloop.index %}
                    {% endcase %}
                  {% endfor %}
                  
                </div>    
              </div>
            </nav>
          </header>
          {% liquid
            render 'header-mobile'
            if settings.show_navbar_mobile
              render 'mobile-bottom-navbar'
            endif
          %}
        </div>
    {% if section.settings.enable_sticky_header %}
      </sticky-header>
    {% endif %}
  </div>
  {% liquid render "header-extend-jvs"
    render "margin-bottom" %}
  
  {% javascript %}
    class StickyHeader extends HTMLElement {
      constructor() {
        super();
      }
      connectedCallback() {
        (this.header = document.getElementById("shopify-section-header-design-2")),
        this.header_ds2__bottom = this.querySelector('.header-ds2__bottom'),
        (this.headerBounds = {}),
        (this.currentScrollTop = 0),
        (this.preventReveal = !1),
        (this.predictiveSearch = this.querySelector("predictive-search")),
        (this.onScrollHandler = this.onScroll.bind(this)),
        (this.hideHeaderOnScrollUp = () => (this.preventReveal = !0)),
        this.addEventListener("preventHeaderReveal", this.hideHeaderOnScrollUp),
        window.addEventListener("scroll", this.onScrollHandler, !1),
        this.createObserver();
        console.log(this.header_ds2__bottom);
      }
      disconnectedCallback() {
        this.removeEventListener("preventHeaderReveal", this.hideHeaderOnScrollUp), window.removeEventListener("scroll", this.onScrollHandler);
      }
      createObserver() {
        new IntersectionObserver((e, t) => {
          (this.headerBounds = e[0].intersectionRect), t.disconnect();
        }).observe(this.header);
      }
      onScroll() {
        let e = window.pageYOffset || document.documentElement.scrollTop;
        if (!this.predictiveSearch || !this.predictiveSearch.isOpen) {
          if (e > this.currentScrollTop && e > this.headerBounds.bottom) {
            if (this.preventHide) return;
            requestAnimationFrame(this.hide.bind(this));
          } else
            e < this.currentScrollTop && e > this.headerBounds.bottom
                    ? this.preventReveal
                            ? (window.clearTimeout(this.isScrolling),
                                    (this.isScrolling = setTimeout(() => {
                                      this.preventReveal = !1;
                                    }, 66)),
                                    requestAnimationFrame(this.hide.bind(this)))
                            : requestAnimationFrame(this.reveal.bind(this))
                    : e <= this.headerBounds.top && requestAnimationFrame(this.reset.bind(this));
          this.currentScrollTop = e;
        }
      }
      hide() {
        this.header.classList.add("shopify-section-header-hidden", "shopify-section-header-sticky", "sticky", "top-0", "z-[99]");
        this.header_ds2__bottom.classList.add('hidden')
      }
      reveal() {
        this.header.classList.add("shopify-section-header-sticky", "animate"), this.header.classList.remove("shopify-section-header-hidden");
        this.header_ds2__bottom.classList.add('hidden')
      }
      reset() {
        this.header.classList.remove("shopify-section-header-hidden", "shopify-section-header-sticky", "animate");
        this.header_ds2__bottom.classList.remove('hidden')
      }
    }
    customElements.define("sticky-header", StickyHeader);
  
  {% endjavascript %}
  
  {% schema %}
  
  {
    "name": "Header design 2",
    "class": "section-header",
    "settings": [
      {
        "type": "color",
        "id": "menu_bg",
        "default": "#fff",
        "label": "t:sections.header.settings.menubg.label"
      },
      {
        "type": "image_picker",
        "id": "logo",
        "label": "t:sections.header.settings.logo.label"
      },
      {
        "type": "select",
        "id": "container_config",
        "options": [
          {
            "value": "container",
            "label": "Container"
          },
          {
            "value": "full-container",
            "label": "Full container"
          }
        ],
        "default": "container",
        "label": "In the container"
      },
      {
        "type": "link_list",
        "id": "menu_mobile",
        "label": "Menu mobile"   
      },
      {
        "type": "checkbox",
        "id": "show_line_separator",
        "default": true,
        "label": "t:sections.header.settings.show_line_separator.label"
      },
      {
        "type":"checkbox",
        "id":"show_account",
        "label":"Show account",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "enable_sticky_header",
        "default": false,
        "label": "t:sections.header.settings.enable_sticky_header.label",
        "info": "t:sections.header.settings.enable_sticky_header.info"
      },
      
      {
        "type": "header",
        "content": "t:sections.margin_bottom.content"
      },
      {
        "type": "paragraph",
        "content": "Unit: pixel"
      },
      {
        "type": "number",
        "id": "margin_bottom_desktop",
        "label": "t:sections.margin_bottom.desktop.label",
        "default": 0
      },
      {
        "type": "number",
        "id": "margin_bottom_table",
        "label": "t:sections.margin_bottom.tablet.label",
        "default": 0
      },
      {
        "type": "number",
        "id": "margin_bottom_mobile",
        "label": "t:sections.margin_bottom.mobile.label",
        "default": 0
      }
    ],
    "blocks": [
      {
        "name": "Menu",
        "type":"menu_item",
        "settings":[
          {
            "type": "text",
            "id":"heading",
            "label":"Menu title",
            "default":"Menu title"
          },
          {
            "type": "link_list",
            "id":"menu",
            "label": "Menu"
          }
        ]
      }
    ],
    "max_blocks": 4,
    "presets": [
      {
        "name": "Header design 2"
      }
    ]
  }
  
  {% endschema %}